/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/tutorial_java_projects.html
 */


// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'com.rabbitmq:amqp-client:5.5.1'
}

allprojects {
    tasks.withType(Exec) {
        doFirst {
            println commandLine
        }
    }
}

project.ext {
    /*
        NOTE:
        Edit these for your need before running gradle
    */
    CURL_EXE = "C:\\WINDOWS\\system32\\curl.exe"

    PYTHON_2_EXE = "C:\\Python2\\python.exe"

    PYTHON_3_EXE = "C:\\Python3\\python.exe"

    PYTHON_3_PIP_EXE = "C:\\python3\\Scripts\\pip.exe"

    PYTHON_PATH = "python"

    PYTHON_VIRTUAL_ENV_LOCATION = "${PYTHON_PATH}\\python_virtual_enviroment"

    PYTHON_VIRTUAL_ENV_LOCATION_RUNNABLE = "${PYTHON_VIRTUAL_ENV_LOCATION}\\venv"

    PYTHON_VIRTUAL_ENV_PY = "${PYTHON_VIRTUAL_ENV_LOCATION}\\virtualenv.py"

    PYTHON_VIRTUAL_ENV_CLONE_PY = "${PYTHON_VIRTUAL_ENV_LOCATION}\\clonevirtualenv.py"

    PYTHON_VIRTUAL_ENV_EASY_INSTALL_PY = "${PYTHON_VIRTUAL_ENV_LOCATION}\\easy_install.py"

    PYTHON_VIRTUAL_ENV_ACTIVATE = "${PYTHON_VIRTUAL_ENV_LOCATION_RUNNABLE}\\Scripts\\activate"

    PYTHON_RABBITMQ_SCRIPT_PATH = "${PYTHON_PATH}\\test-rabbitmq.py"

    PYTHON_PIP_REQUIREMENT_PATH = "${PYTHON_PATH}\\requirements.txt"

    RABBITMQ_HOST = "localhost"

    RABBITMQ_PORT = "5672"

    RABBITMQ_VHOST = "myvhost"

    RABBITMQ_USERNAME = "guest"

    RABBITMQ_PASSWORD = "guest"
}

/*
["pika", "requests"].each {
    tasks.create(name: "easyinstall_"+it, type: Exec) {
        group = "Python"

        def rawPackageName = "${it.name}"  - "easyinstall_";

        println ("EasyInstall ${rawPackageName}");

        commandLine PYTHON_3_EXE, PYTHON_VIRTUAL_ENV_EASY_INSTALL_PY, "${rawPackageName}"
    }
}
*/

/*
    == TASKS ==
*/

task Sanity() {
    doLast {
        println("I'm Alive")
    }
}

/*
task GetPip(type: Exec) {
    commandLine CURL_EXE, "https://bootstrap.pypa.io/get-pip.py", "-o", "get-pip.py"
}

task InstallPip(type: Exec) {
    dependsOn GetPip

    commandLine PYTHON_2_EXE, "get-pip.py"
}
*/

task SetupPipenv(type: Exec) {
    //dependsOn InstallPip

    group = "Python"

    commandLine PYTHON_3_PIP_EXE, "install", "--ignore-installed", "pipenv", "-t", PYTHON_VIRTUAL_ENV_LOCATION
}

task InitializeVirtualEnviroment(type: Exec) {
    dependsOn SetupPipenv

    group = "Python"

    commandLine PYTHON_3_EXE, PYTHON_VIRTUAL_ENV_PY, "-p${PYTHON_3_EXE}", PYTHON_VIRTUAL_ENV_LOCATION_RUNNABLE
}

task TestRabbitMQ(type: Exec) {
    dependsOn InitializeVirtualEnviroment

    group = "Python"

    String rabbitMqMessage = "Hello"

    commandLine "bash", "./python/run_test-rabbitmq",\
 "${PYTHON_VIRTUAL_ENV_ACTIVATE}",\
 "${PYTHON_PIP_REQUIREMENT_PATH}",\
 "${PYTHON_RABBITMQ_SCRIPT_PATH}",\
 "${rabbitMqMessage}",\
 "${RABBITMQ_HOST}",\
 "${RABBITMQ_PORT}",\
 "${RABBITMQ_VHOST}",\
 "${RABBITMQ_USERNAME}",\
 "${RABBITMQ_PASSWORD}"
}

/*
task SolvePythonPackages() {
    dependsOn SetupPipenv

    group = "Python"
    
    tasks.each {
        if( it.name.startsWith("easyinstall_") ) {
            SolvePythonPackages.finalizedBy it.name
        }
    }
}
*/
